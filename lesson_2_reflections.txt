What happens when you initialize a repository? Why do you need to do it?
An empty repository is created.  I need to commit my initial changes and I need to add files to it.

How is the staging area different from the working directory and the repository?
The staging area contains the files and changes that have been added but not committed.

What value do you think it offers?
The staging area gives you the chance to create a baseline of the changes that you're making.

How can you use the staging area to make sure you have one commit per logical
change?
You can make small changes that are part of a logical change and add them to the staging area without making a commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches might be helpful in keeping history organized when there are multiple versions that need to be managed simultaneously.
Branches will help to make each of those versions maintain their own separate state.

How do the diagrams help you visualize the branch structure?
Diagrams show the branches and the commits performed against those branches.  Features that are different between branches can be seen more easily.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The code of the 2 branches is combined into a single set of files.  Changes made in the two branches can be merged into a single result.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Automatic merging will combine changes that don't affect the same code.  
Pros: It's easy when it works
Cons: Some code duplication or conflict can still occur.
